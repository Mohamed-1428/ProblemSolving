using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;

namespace lab
{
    class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine(removeAllAppearance("ssaleems","s"));
        
        }
        static string removeAllAppearance(string mainStr, string deletedStr)
        {           
            while (indexOf(mainStr, deletedStr) != -1)
            {
                mainStr = removeInRange(mainStr,indexOf(mainStr, deletedStr), deletedStr.Length);
            }

            return mainStr;
        }

        static int indexOf(string haystack, string needle)
        {
            if (needle.Length == 0) return 0;
            if (needle.Length > haystack.Length) return -1;
            if (haystack == needle) return 0;

            int counter = 0, oldIndex = 0;

            for (int i = 0; i < haystack.Length; i++)
            {
                oldIndex = i;
                if (haystack[i] == needle[0] && i <= haystack.Length - needle.Length)
                {
                    if ((i == haystack.Length - 1) && (counter == needle.Length)) return i;
                    for (int j = 0; j < needle.Length; j++)
                    {
                        if (haystack[i] == needle[j])
                        {
                            counter++;
                            i++;
                        }
                        else
                        {
                            i = oldIndex;
                            break;
                        }
                    }
                    if (counter == needle.Length) return oldIndex;
                    i = oldIndex;
                    counter = 0;
                }
            }
            return -1;
        }

        public static string removeInRange(string str, int startIndex, int LastIndex)
        {
            string result = "";

            if (startIndex < LastIndex)
            {
                for (int i = 0; i < str.Length; i++)
                {
                    if (i < startIndex || i > LastIndex - 1)
                        result += str[i];
                }

            }
            else
            {
                for (int i = 0; i < str.Length; i++)
                {
                    if (i < startIndex || i > startIndex+LastIndex - 1)
                        result += str[i];
                }

            }

            return result;
        }
    }
}

