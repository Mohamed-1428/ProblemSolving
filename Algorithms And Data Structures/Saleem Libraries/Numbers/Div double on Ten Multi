static string divDecNumOnMultiTenNumber(string number, string multTen)
    {
        string result = "",
        numWithNoComma = numberWithoutComma(number);
        int zerosCount = numberOfZeros(multTen),
        digitBeforeComma = digitsBeforeComma(number);

        if (zerosCount == digitBeforeComma) result = "0," + numWithNoComma;
        else if (zerosCount > digitBeforeComma)
        {
            result += "0,";
            for (int i = 0; i < zerosCount - digitBeforeComma; i++)
                result += '0';

            return result += numWithNoComma;
        }
        else
        {
            bool falg = true;
            for (int i = 0; i < numWithNoComma.Length; i++)
            {
                if (i == zerosCount && falg)
                {
                    result += ',';
                    i--;
                    falg = false;
                }
                else result += numWithNoComma[i];
            }
        }
        return result;
    }

static int digitsBeforeComma(string number)
    {
        int counter = 0;
        for (int i = 0; i < number.Length - 1; i++)
            if (number[i] == ',') break;
            else counter++;

        return counter;
    }

static int numberOfZeros(string multTen)
    {
        int counter = 0;
        for (int i = multTen.Length - 1; i >= 0; i--)
            if (multTen[i] != '0') break;
            else counter++;

        return counter;
    }

static string numberWithoutComma(string number)
    {
        string result = "";
        for (int i = 0; i < number.Length; i++)
            if (number[i] == ',') continue;
            else result += number[i];

        return result;
    }
