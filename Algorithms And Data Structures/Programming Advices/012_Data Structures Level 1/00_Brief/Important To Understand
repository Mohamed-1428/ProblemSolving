1- Program = Algorithms + Data Structure.

2- Heterogenous means Different Types
   Homogenous means Same Types
   Linear Data Structure means that data is in sequence order

3- What Affects Program Speed?
   1- Hardware (CPU, RAM, OS) --> Performance
   2- Algorithm: ---------------> Complexity
       1- Time
       2- Space
    
4 - What affects Algorithm?
    1- Time
    2- Space
    
5- Performance has to do with?
    Hardware , OS

6- Complexity has to do with?
    Time Complexity
    Space Complexity
    
7-  Big O, also known as Big O notation, represents an algorithm's worst-case complexity.
    بيعطيك علاقة مابين عدد الانبوتس والتايم اللي بدو ياخده --> انتبه هو مابيعطيك سبيسيفيك تايم
    Big O uses algebraic terms to describe the complexity of an algorithm.
    Big O describes the relationship between Input Size and Time/Spcase
    Big O does not tell you the exact time your algorithm's runtime is.

8- Big O Types:

    1- O(1) Constant Time Function:
         ثابت
         O(1) is not affected by Input Size, so it always takes the same time.
         O(1) is the fastest notation, which means that your algorithm is excellent.
      
    2- O(n) is a linear time function:
         كل مابزيد خطوة بزيد خطوةفي الوقت
         O(n) is affected by Input Size Linearly.
    
    3- O(n^2) is Quadratic Time Function:
         كل مابزيد خطوة بزيد ضعفها في الوقت
    
    4- O(log n)
       Log means that the number of iterations in the loop is always less than n
       Log2 always half itself.
 
 9- Data Structure Types (check attached photo please) And (013_ Algorithms And Problem Solving Level 5: 00_Data Structures Brief Types):
      1- Variables: string, int, char...
      2- Binary Data Structure : Like Permissions
      3- Array Data Structure
      4- Matrix Data Structure: 2 dimensional array (Like Table) --> can access for any element using arr[0][1]
      5- Stack Data Structure:
         1- LIFO means Last In First Out
         2- امثلة عملية عن الستاك:
            - Vector
            - Call Stack :  الفنكشن الاول بنادي فانكشن تاني --> بيخلص التاني بعدين بيخلص الأول
            - Ctrl+Z (Undo\Redo) : 013_ Algorithms And Problem Solving Level 5: Project7
	 3- الستاك بالأساس مبني على ال Array
         4- Push: To add an Item to a stack you use
	 5- Pop: To remove the top item from stack you use
	
      6- Vector:
         - new version of stack
	 - can access for any elemnt like array (v.ElementAt(0)), stack cannot
	 
      7- Queue:
      	 - FIFO: means First In First Out. 
	 - تطبيق عكلي عليه لما بدك تروح تنطر دورك بشركة اتصالات مثلا وتقطع دور على الكيوسك, اما بدك تطالع موبايل جديد أو تدفع فاتورة -- كل وحدة من هدول منسميهن 
	 	Queue Line
	 - Refernce: 13 - Algorithms & Problem Solving Level 5 - Project 8	
      
      8- Linked List:
      	
	 1- Singly Linked List: (Check Photos 003_What is Linked List)
	 	- عبارة عن سلسلة من الداتا المترابطة في الميموري عن طريق بوينترز ومؤشرات على النيكست نودز
	 	- (لأنه فيها نيكست فقط)بتحسن تمشي فيها من اليسار لليمسن فقط
		- Traversal can occur in one way.
		- linked list is a linear data structure that includes a series of connected nodes.
		- each node consists of two parts: Data and Pointer to the address of next node.
		- Linked list allows you to add data dynamically on run time.
		- Linked List is a data structure used to build other data structures like Stack, Queue , and others.
	
	2- Doubly Linked List: (Check Photos 004_What is Doubly Linked List)
	   	- (لأنه فيها بريف و نيكست)تمتاز عن السينكل أنه تحسن تكشي فيها بالاتجاهين
            	- Each node consists of a data value, a pointer to the next node, and a pointer to the previous node
		- Traversal can occur in both ways.
		- It requires more space because of an extra pointer.
		
	3- Circular Linked List:
	   المؤشر الأخير يؤشر على أول نود بغض النظر عن نوع الليست
	   مثال عنها البفر: مثلا عندي بفر بيسع مئة عنصر بس فلل بصير احذف العنصر الاول وعبي محله عنصر جديد
      
      9- ملاحظة مهمة من الكورس 
     	 13 - Algorithms & Problem Solving Level 5 --> Project 3
      	 dubly Linked List -> Queue -> Stack
	 الكيو مبني على الدبل لينكدليست والستاك مبني على الكيو بس بعمل اوفر رايد لهدول جدا سهلين: 
	 يعني من الاخير يعتمدون اعتماد كلي على الدبل لينكدليست
          public void push(T data) => MyList().insertAtBeging(data);
      	  public T top() => front();
      	  public T bottom() => back();
