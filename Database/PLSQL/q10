create or replace procedure q10 is
  v_hike             number(2);
  v_numOfUpdatedRows int := 0;
begin
  for i in (select e.employee_id, e.department_id, e.commission_pct
              from employeetest e) loop
  
    if (i.department_id = 40) then
      v_hike := 10;
    elsif (i.department_id = 70) then
      v_hike := 15;
    elsif (i.commission_pct > 0.03) then
      v_hike := 5;
    else
      v_hike := 10;
    end if;
  
    update employeetest e
       set e.salary = e.salary + e.salary * v_hike / 100
     where e.employee_id = i.employee_id;
    v_numOfUpdatedRows := v_numOfUpdatedRows + 1;
  end loop;

  if (v_numOfUpdatedRows > 0) then
    commit;
    dbms_output.put_line(v_numOfUpdatedRows || ' rows updated');
  end if;

exception
  when others then
    dbms_output.put_line(sqlerrm);
  
end q10;
